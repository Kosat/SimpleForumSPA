// <auto-generated />
using Api.Forum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Api.Forum.Migrations
{
    [DbContext(typeof(ForumDbContext))]
    [Migration("20180419102848_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Forum.Data.Thread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int>("RepliesCount");

                    b.Property<string>("Subject");

                    b.Property<DateTime>("TimeCreated");

                    b.Property<string>("UserCreatedEmail");

                    b.Property<string>("UserCreatedId");

                    b.HasKey("Id");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("Api.Forum.Data.ThreadReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int>("ThreadId");

                    b.Property<DateTime>("TimeCreated");

                    b.Property<string>("UserCreatedEmail");

                    b.Property<string>("UserCreatedId");

                    b.HasKey("Id");

                    b.HasIndex("ThreadId");

                    b.ToTable("ThreadReplies");
                });

            modelBuilder.Entity("Api.Forum.Data.ThreadReply", b =>
                {
                    b.HasOne("Api.Forum.Data.Thread")
                        .WithMany("Replies")
                        .HasForeignKey("ThreadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
